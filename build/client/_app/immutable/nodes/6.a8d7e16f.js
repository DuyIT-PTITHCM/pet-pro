import{s as v,g as w,l as h,h as P,i as b,m,k as j,w as _}from"../chunks/scheduler.45014ca4.js";import{S as x,i as y,d as g,v as E,e as p,a as S,n as f,s as k}from"../chunks/index.f7d6e5c4.js";const C="src/routes/(app)/[url]/+page.svelte";function l(a){var d;let t,i,o=((d=a[0])==null?void 0:d.data.name)+"",r;const n={c:function(){t=w("h1"),i=h("hello cac ban "),r=h(o),this.h()},l:function(s){t=P(s,"H1",{});var c=b(t);i=m(c,"hello cac ban "),r=m(c,o),c.forEach(p),this.h()},h:function(){j(t,C,4,0,48)},m:function(s,c){S(s,t,c),f(t,i),f(t,r)},p:function(s,[c]){var u;c&1&&o!==(o=((u=s[0])==null?void 0:u.data.name)+"")&&k(r,o)},i:_,o:_,d:function(s){s&&p(t)}};return g("SvelteRegisterBlock",{block:n,id:l.name,type:"component",source:"",ctx:a}),n}function O(a,t,i){let{$$slots:o={},$$scope:r}=t;E("Page",o,[]);let{data:n}=t;a.$$.on_mount.push(function(){n===void 0&&!("data"in t||a.$$.bound[a.$$.props.data])&&console.warn("<Page> was created without expected prop 'data'")});const d=["data"];return Object.keys(t).forEach(e=>{!~d.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<Page> was created with unknown prop '${e}'`)}),a.$$set=e=>{"data"in e&&i(0,n=e.data)},a.$capture_state=()=>({data:n}),a.$inject_state=e=>{"data"in e&&i(0,n=e.data)},t&&"$$inject"in t&&a.$inject_state(t.$$inject),[n]}class B extends x{constructor(t){super(t),y(this,t,O,l,v,{data:0}),g("SvelteRegisterComponent",{component:this,tagName:"Page",options:t,id:l.name})}get data(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set data(t){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{B as component};
